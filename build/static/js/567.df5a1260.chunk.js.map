{"version":3,"file":"static/js/567.df5a1260.chunk.js","mappings":"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","sources":["FNS/setStatuscodeErrorMessage.js","components/Private-Sites/sub-components/add-image.js"],"sourcesContent":["const setStatuscodeErrorMessage = (statuscode, setFeedback) => {\r\n    if (statuscode === 401) {\r\n        setFeedback(\"Unathorized...\")\r\n    }\r\n    else if (statuscode === 400) {\r\n        setFeedback('Bad request...')\r\n    }\r\n    else if (statuscode === 405) {\r\n        setFeedback('Method not allowed...');\r\n    }\r\n    else if (statuscode === 403) {\r\n        setFeedback(\"Error, request not allowed...\")\r\n    }\r\n    else if (statuscode === 404) {\r\n        setFeedback(\"Error, server rejected...\")\r\n    }\r\n    else if (statuscode === 409) {\r\n        setFeedback(\"Similar identity exists\")\r\n    }\r\n    else if (statuscode === 500) {\r\n        setFeedback(\"Internal error...\")\r\n    }\r\n}\r\n\r\nexport default setStatuscodeErrorMessage;","import axios from \"axios\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { API_BASE_URL } from \"../../../Resources/BaseURL\";\nimport useAuth from \"../../../customHooks/useAuth\";\nimport setStatuscodeErrorMessage from \"../../../FNS/setStatuscodeErrorMessage\";\nimport Loading from \"../../micro-components/loading\";\nimport GotoRefreshEndPoint from \"../../../FNS/GoToRefreshEndPoint\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport '../../micro-components/add-images.css';\nimport '../CSS/edit-audio-modal.css';\nimport '../CSS/added.css';\n\nconst AddImage = () => {\n    const { auth } = useAuth();\n    const navigateTo = useNavigate();\n    const [addedImages, setAddedImages] = useState('')\n    const [feedback, setFeedback] = useState('');\n    const [bools, setBools] = useState({ showloading: false });\n\n    const imageRef = useRef();\n    const addToImages = (e) => {\n        const allowedSize = 1024 * 1024 * 5;\n\n        if (e.target.files.length > 5) {\n            setFeedback('Select not more than 5 files')\n        }\n        else {\n            //code is this way cos the idea was to manage multiple file uploads at a time (5 at a time)\n            for (var i = 0; i <= e.target.files.length; i++) {\n\n                if (i !== e.target.files.length) {\n                    if (e?.target?.files[i]?.size > allowedSize) {\n                        setFeedback(`File size too large`);\n                    }\n                    else {\n                        setAddedImages([e.target.files[i]]);\n                    }\n                }\n\n                // if (i === e.target.files.length) {\n                //         setFeedback(`${filename} size too large`)\n                // }\n            }\n        }\n    }\n\n    const Save = async () => {\n        const ImageformData = new FormData();\n        ImageformData?.append(\"file\", addedImages[0]);\n        ImageformData?.append(\"not_current_content\", true);\n\n        if (addedImages?.length > 0) {\n\n            setBools(p => { return { ...p, showloading: true } });\n            try {\n                let response = await axios.post(`${API_BASE_URL}/save-image`, ImageformData, { withCredentials: true })\n                if (response.status === 200) {\n                    navigateTo(`/${auth?.stagenameInUrl?.trim()?.toLowerCase()}/added-images`)\n                }\n            } catch (error) {\n                if (!error?.response?.data) {\n                    setBools(p => { return { ...p, showloading: false } });\n                    setFeedback('Network error...')\n                }\n                else {\n                    if (error?.response?.status === 401) {\n                        GotoRefreshEndPoint(auth).then((r) => {\n                            if (r.status === 200) {\n                                Save();\n                            } else {\n                                navigateTo(`/${auth?.stagenameInUrl?.trim()?.toLowerCase()}/sign-out`);\n                            }\n                        })\n                    }\n                    else {\n                        setStatuscodeErrorMessage(error?.response?.status, setFeedback)\n                        setBools(p => { return { ...p, showloading: false } });\n                    }\n                }\n            }\n        }\n        else {\n            setFeedback('Select image')\n        }\n    }\n\n    useEffect(() => {\n        if (feedback) {\n            setTimeout(() => {\n                setFeedback(\"\")\n            }, 3000);\n        }\n    }, [feedback])\n\n\n    return (\n        <>\n            {bools.showloading ? <Loading /> :\n                <main>\n                    <div className=\"feedback-container\" style={!feedback ? { backgroundColor: \"transparent\" } : {}}>\n                        <div className=\"feeback\"> <span style={{ visibility: \"hidden\" }}>.</span>{feedback}</div>\n                    </div>\n                    <div className=\"page-heading\">ADD NEW <i><b>IMAGE</b></i></div>\n\n\n                    {addedImages.length === 0 &&\n                        <section>\n                            <section className=\"add-images\">\n                                <form>\n                                    <table>\n                                        <tbody>\n                                            <tr>\n                                                <td><label>Select images</label> </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td><input style={{ width: \"0px\", height: \"0px\", overflow: \"hidden\" }} type={'file'} accept={'.png,.jpg,.jpeg,.svg'} ref={imageRef} onChange={(e) => { addToImages(e) }}></input>\n                                                    <button className=\"upload-image\" onClick={(e) => { e.preventDefault(); imageRef?.current?.click(); }}>Upload</button></td>\n                                            </tr>\n\n                                        </tbody>\n                                    </table>\n                                </form>\n                            </section>\n\n                        </section>\n                    }\n\n                    {addedImages.length > 0 && <section>\n\n                        <div className=\"image-viewer\">\n                            {addedImages.length > 0 && <img alt=\"\" src={addedImages[0] && URL.createObjectURL(addedImages[0])}></img>}\n\n                        </div>\n\n                        <section className=\"decision-buttons\" style={{ textAlign: \"center\" }}>\n                            {addedImages?.length > 0 && <button onClick={(e) => { e.preventDefault(); Save() }}>Save</button>}\n                            {addedImages?.length > 0 && <button onClick={(e) => { e.preventDefault(); navigateTo(`/${auth?.stagenameInUrl?.trim()?.toLowerCase()}/added-images`) }}>Cancel</button>}\n\n                        </section>\n\n                    </section>}\n\n                </main>}\n        </>\n    )\n}\n\nexport default AddImage;"],"names":["statuscode","setFeedback","auth","useAuth","navigateTo","useNavigate","useState","addedImages","setAddedImages","feedback","showloading","bools","setBools","imageRef","useRef","Save","ImageformData","FormData","append","length","p","axios","API_BASE_URL","withCredentials","status","stagenameInUrl","trim","toLowerCase","response","data","GotoRefreshEndPoint","then","r","setStatuscodeErrorMessage","useEffect","setTimeout","className","style","backgroundColor","visibility","width","height","overflow","type","accept","ref","onChange","e","target","files","i","size","addToImages","onClick","preventDefault","current","click","alt","src","URL","createObjectURL","textAlign"],"sourceRoot":""}