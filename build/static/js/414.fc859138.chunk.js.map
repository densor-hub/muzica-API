{"version":3,"file":"static/js/414.fc859138.chunk.js","mappings":"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","sources":["FNS/includes.js","FNS/setStatuscodeErrorMessage.js","components/Public-sites/reset-password-public.js","components/micro-components/signin.js"],"sourcesContent":["\r\nexport const includesUpperCase=(phrase)=>{\r\n  if(\r\n        phrase.includes(\"A\") || phrase.includes(\"B\") || phrase.includes(\"C\") || phrase.includes(\"D\") || phrase.includes(\"E\") ||phrase.includes(\"F\") || phrase.includes(\"G\") ||phrase.includes(\"H\") \r\n        ||phrase.includes(\"I\") || phrase.includes(\"J\") || phrase.includes(\"K\") ||phrase.includes(\"L\") || phrase.includes(\"M\") || phrase.includes(\"N\") || phrase.includes(\"O\") ||phrase.includes(\"P\") \r\n        || phrase.includes(\"Q\") ||phrase.includes(\"R\") ||phrase.includes(\"S\") || phrase.includes(\"T\") ||phrase.includes(\"U\") || phrase.includes(\"V\") ||phrase.includes(\"W\") ||phrase.includes(\"X\") \r\n        ||phrase.includes(\"Y\") ||phrase.includes(\"Z\") \r\n    ){\r\n        return true\r\n        }\r\n        else return false;\r\n}\r\n\r\n\r\nexport const includesLowerCase=(phrase)=>{\r\n    if(\r\n        phrase.includes(\"a\") || phrase.includes(\"b\") || phrase.includes(\"c\") || phrase.includes(\"d\") || phrase.includes(\"e\") ||phrase.includes(\"f\") || phrase.includes(\"g\") ||phrase.includes(\"h\") \r\n        ||phrase.includes(\"i\") || phrase.includes(\"j\") || phrase.includes(\"k\") ||phrase.includes(\"l\") || phrase.includes(\"m\") || phrase.includes(\"n\") || phrase.includes(\"o\") ||phrase.includes(\"p\") \r\n        || phrase.includes(\"q\") ||phrase.includes(\"r\") ||phrase.includes(\"s\") || phrase.includes(\"t\") ||phrase.includes(\"u\") || phrase.includes(\"v\") ||phrase.includes(\"w\") ||phrase.includes(\"x\") \r\n        ||phrase.includes(\"y\") ||phrase.includes(\"z\") \r\n    ){\r\n        return true \r\n        }\r\n        else return false;\r\n}\r\n\r\nexport const includesSymbols= (phrase)=>{\r\n    if(phrase.includes(\"~\")||phrase.includes(\"!\") || phrase.includes(\"@\") || phrase.includes(\"#\")|| phrase.includes(\"$\")|| phrase.includes(\"%\")||phrase.includes(\"^\")\r\n    ||phrase.includes(\"&\")||phrase.includes(\"*\")|| phrase.includes(\"(\")||phrase.includes(\")\")|| phrase.includes(\"-\")|| phrase.includes(\"_\")||phrase.includes(\"=\")\r\n    ||phrase.includes(\"+\")||phrase.includes(\"?\")||phrase.includes(\"/\")|| phrase.includes(\".\")||phrase.includes(\">\")||phrase.includes(\",\")||phrase.includes(\"<\") \r\n    ||phrase.includes(\"|\")|| phrase.includes(\"£\")|| phrase.includes(\"`\")|| phrase.includes(\"[\")|| phrase.includes(\"{\")|| phrase.includes(\"]\")|| phrase.includes(\"}\")\r\n    || phrase.includes(\"|\")) \r\n    {\r\n        return true \r\n        }\r\n        else return false;\r\n}\r\n\r\nexport const includesSymbolsButPeriod= (phrase)=>{\r\n    if(phrase.includes(\"~\")||phrase.includes(\"!\") || phrase.includes(\"@\") || phrase.includes(\"#\")|| phrase.includes(\"$\")|| phrase.includes(\"%\")||phrase.includes(\"^\")\r\n    ||phrase.includes(\"&\")||phrase.includes(\"*\")|| phrase.includes(\"(\")||phrase.includes(\")\")|| phrase.includes(\"-\")|| phrase.includes(\"_\")||phrase.includes(\"=\")\r\n    ||phrase.includes(\"+\")||phrase.includes(\"?\")||phrase.includes(\"/\")|| phrase.includes(\">\")||phrase.includes(\",\")||phrase.includes(\"<\") \r\n    ||phrase.includes(\"|\")|| phrase.includes(\"£\")|| phrase.includes(\"`\")|| phrase.includes(\"[\")|| phrase.includes(\"{\")|| phrase.includes(\"]\")|| phrase.includes(\"}\")\r\n    || phrase.includes(\"|\")) \r\n    {\r\n        return true \r\n        }\r\n        else return false;\r\n}\r\n\r\n\r\nexport const includeNumbers=(phrase)=>{\r\n   if (String(phrase).includes(\"0\")|| String(phrase).includes(\"1\")|| String(phrase).includes(\"2\")|| String(phrase).includes(\"3\") ||  String(phrase).includes(\"4\")\r\n    || String(phrase).includes(\"5\")   || String(phrase).includes(\"6\")  || String(phrase).includes(\"7\")  || String(phrase).includes(\"8\") || String(phrase).includes(\"9\") )\r\n    {\r\n        return true \r\n        }\r\n        else  return false;\r\n\r\n}\r\n\r\n","const setStatuscodeErrorMessage = (statuscode, setFeedback) => {\r\n    if (statuscode === 401) {\r\n        setFeedback(\"Unathorized...\")\r\n    }\r\n    else if (statuscode === 400) {\r\n        setFeedback('Bad request...')\r\n    }\r\n    else if (statuscode === 405) {\r\n        setFeedback('Method not allowed...');\r\n    }\r\n    else if (statuscode === 403) {\r\n        setFeedback(\"Error, request not allowed...\")\r\n    }\r\n    else if (statuscode === 404) {\r\n        setFeedback(\"Error, server rejected...\")\r\n    }\r\n    else if (statuscode === 409) {\r\n        setFeedback(\"Similar identity exists\")\r\n    }\r\n    else if (statuscode === 500) {\r\n        setFeedback(\"Internal error...\")\r\n    }\r\n}\r\n\r\nexport default setStatuscodeErrorMessage;","import { Link } from \"react-router-dom\";\r\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input'\r\nimport { useRef, useState } from \"react\";\r\nimport { includeNumbers, includesLowerCase, includesSymbols, includesUpperCase } from \"../../FNS/includes\";\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from \"../../Resources/BaseURL\";\r\nimport setStatuscodeErrorMessage from '../../FNS/setStatuscodeErrorMessage';\r\nimport SignIn from \"../micro-components/signin\";\r\nimport Loading from \"../micro-components/loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BsFillUnlockFill, BsFillLockFill } from 'react-icons/bs';\r\n\r\n\r\nimport '../micro-components/signin.css'\r\n\r\nconst ResetPassword_Public = () => {\r\n    const navigateTo = useNavigate();\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n    const [logics, setLogics] = useState({ showPassword: false, showConfirmPassword: false, showloading: false, showSignin: false, showCodeForm: false })\r\n    const [inputValuesForSynchronusRendering, setInpuValuesForSynchronousRendering] = useState({ password: \"\", confirmPassword: \"\" });\r\n\r\n    const themeColors = { valid: \"white\", error: 'rgb(255, 71, 86)' }\r\n    const [inputDirectives, setInptDirectives] = useState({ password: false, confirmpassword: false })\r\n\r\n\r\n    const inputRefs = useRef([]);\r\n    const addToInputRefs = (element) => {\r\n        if (element && !inputRefs.current?.includes(element)) {\r\n            inputRefs?.current?.push(element)\r\n        }\r\n        else {\r\n            inputRefs?.current?.pop(element)\r\n        }\r\n    }\r\n\r\n    const divContainingInputRefs = useRef([]);\r\n    const phonenumnerDivRef = useRef();\r\n    const addToDivContainingInputRefs = (element) => {\r\n        if (element && !divContainingInputRefs?.current?.includes(element)) {\r\n            divContainingInputRefs?.current?.push(element)\r\n        }\r\n        else {\r\n            divContainingInputRefs?.current?.pop(element);\r\n        }\r\n    }\r\n\r\n    const hidePassword = () => {\r\n        inputRefs.current.find((element) => {\r\n            return element.className === 'password'\r\n        }).type = \"password\"\r\n\r\n        setLogics(p => { return { ...p, showPassword: false } })\r\n    }\r\n\r\n    const viewPassword = () => {\r\n        inputRefs.current.find((element) => {\r\n            return element.className === 'password'\r\n        }).type = \"text\"\r\n\r\n        setLogics(p => { return { ...p, showPassword: true } })\r\n    }\r\n\r\n    const hideConfirmPassword = () => {\r\n        inputRefs.current.find((element) => {\r\n            return element.className === 'confirmpassword'\r\n        }).type = \"password\"\r\n\r\n        setLogics(p => { return { ...p, showConfirmPassword: false } })\r\n    }\r\n\r\n\r\n    const viewConfirmPassword = () => {\r\n        inputRefs.current.find((element) => {\r\n            return element.className === 'confirmpassword'\r\n        }).type = \"text\"\r\n\r\n        setLogics(p => { return { ...p, showConfirmPassword: true } })\r\n    }\r\n\r\n    const submitPhoneNumber = async () => {\r\n        //phone cos it proves stubborn when added to collection of refs\r\n        if (!phoneNumber) {\r\n            phonenumnerDivRef.current.style.borderBottom = `3px solid ${themeColors?.error}`;\r\n            setFeedback('Enter phone number')\r\n        }\r\n        else {\r\n            if (!isValidPhoneNumber(phoneNumber)) {\r\n                phonenumnerDivRef.current.style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                setFeedback('Invalid phone number')\r\n            }\r\n            else {\r\n                phonenumnerDivRef.current.style.borderBottom = `3px solid ${themeColors?.valid}`;\r\n\r\n\r\n                try {\r\n                    setLogics(p => { return { ...p, showloading: true } });\r\n                    let response = await axios?.post(`${API_BASE_URL}/reset-password`, { username: phoneNumber });\r\n\r\n                    if (response?.status === 200) {\r\n                        setLogics(p => { return { ...p, showCodeForm: true, showloading: false } });\r\n                        setFeedback(`Enter verification code sent to your email ${response?.data?.email?.split('@')[0]?.slice(0, 5)}.........${response?.data?.email?.split('@')[0]?.slice(response?.data?.email?.split('@')[0]?.length - 2, response?.data?.email?.split('@')[0]?.length)}@${response?.data?.email?.split('@')[1]}`);\r\n                    }\r\n                    else {\r\n                        setFeedback('Phone number not registered')\r\n                    }\r\n\r\n                } catch (error) {\r\n                    setLogics(p => { return { ...p, showloading: false } });\r\n                    if (!error?.response?.data) {\r\n                        setFeedback(\"Network error...\")\r\n                    }\r\n                    if (error?.response.status === 502) {\r\n                        setFeedback('Could not connect, try again later')\r\n                    }\r\n                    else if (error?.response?.status === 406) {\r\n                        setFeedback('Invalid code')\r\n                    } else if (error?.response?.status === 404) {\r\n                        setFeedback('Accout does not exist')\r\n                    }\r\n                    else {\r\n                        setStatuscodeErrorMessage(error?.response?.status, setFeedback);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const submitNewPassWord = async () => {\r\n\r\n        let password, confirmpassword, code;\r\n        inputRefs.current.forEach(element => {\r\n\r\n            //CODE\r\n            if (element?.className === 'code') {\r\n                console.log(element)\r\n                code = element?.value;\r\n                if (code === \"\") {\r\n                    divContainingInputRefs.current[0].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                }\r\n                else {\r\n                    divContainingInputRefs.current[0].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                }\r\n            }\r\n\r\n            //password\r\n            if (element.className === \"password\") {\r\n                password = element?.value;\r\n                if (password) {\r\n\r\n                    if (password?.length < 8) {\r\n                        divContainingInputRefs.current[1].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                    }\r\n                    else {\r\n                        if (!((includeNumbers(password) && includesUpperCase(password) && includesLowerCase(password))\r\n                            || (includesSymbols(password) && includesUpperCase(password) && includesLowerCase(password))\r\n                            || (includeNumbers(password) && includesUpperCase(password) && includesLowerCase(password) && includesSymbols(password)))) {\r\n                            setFeedback('Phone number or password incorrect')\r\n                        }\r\n                        else {\r\n                            divContainingInputRefs.current[1].style.borderBottom = `3px solid ${themeColors?.valid}`;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    divContainingInputRefs.current[1].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n\r\n                }\r\n            }\r\n\r\n\r\n            if (element.className === \"confirmpassword\") {\r\n                confirmpassword = element?.value;\r\n                if (confirmpassword) {\r\n                    if (confirmpassword !== password) {\r\n                        divContainingInputRefs.current[2].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                    }\r\n                    else {\r\n                        divContainingInputRefs.current[1].style.borderBottom = `3px solid ${themeColors?.valid}`;\r\n                        divContainingInputRefs.current[2].style.borderBottom = `3px solid ${themeColors?.valid}`;\r\n                    }\r\n                }\r\n                else {\r\n                    divContainingInputRefs.current[2].style.borderBottom = `3px solid ${themeColors?.error}`;\r\n                }\r\n            }\r\n        })\r\n\r\n        //check whether any element is empty\r\n        inputRefs?.current?.forEach(element => {\r\n            if (element?.value === \"\") {\r\n                setFeedback(\"Enter all fields\")\r\n            }\r\n        })\r\n\r\n        if (\r\n            //(phoneNumber !=='' && phoneNumber !==undefined && isValidPhoneNumber(phoneNumber)) \r\n            (code && code?.length > 0)\r\n\r\n            && password !== \"\" && password !== undefined && (confirmpassword === password)\r\n            && ((includeNumbers(password) && includesUpperCase(password) && includesLowerCase(password)) || (includesSymbols(password) && includesUpperCase(password) && includesLowerCase(password)) || (includeNumbers(password) && includesUpperCase(password) && includesLowerCase(password) && includesSymbols(password)))) {\r\n\r\n            //set all divs containing inputs to default colors\r\n            divContainingInputRefs?.current?.forEach(element => element.style.borderBottom = `3px solid ${themeColors?.valid}`)\r\n\r\n            setLogics((p) => { return { ...p, showloading: true } });\r\n\r\n            try {\r\n                const response = await axios?.post(`${API_BASE_URL}/reset-password`, { code: code, password: password, confirmpassword: confirmpassword });\r\n                console.log(response)\r\n\r\n                if (response?.status === 200) {\r\n                    cancel();\r\n                    setLogics((p) => { return { ...p, showloading: false, showSignin: true } });\r\n                    setFeedback(`Password reset successful. Sign in to contiue`);\r\n\r\n                }\r\n                else if (response?.status === 204) {\r\n                    setLogics((p) => { return { ...p, showloading: false } });\r\n                    setFeedback(`Invalid code`);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                setLogics(p => { return { ...p, showloading: false } });\r\n                if (!error?.response?.data) {\r\n                    setFeedback(\"Network error...\")\r\n                }\r\n                else {\r\n                    if (error?.response?.status === 408) {\r\n                        setFeedback('Expired verification code');\r\n                    }\r\n\r\n                    else {\r\n                        setStatuscodeErrorMessage(error?.response?.status, setFeedback);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const cancel = () => {\r\n        inputRefs?.current?.forEach(element => {\r\n            element.value = \"\";\r\n        });\r\n\r\n        setInptDirectives(p => { return { ...p, fullname: false, gender: false, password: false, confirmpassword: false } });\r\n\r\n        //phone div has its own ref cos it misbehaves when added to a collection of refs\r\n        if (phonenumnerDivRef?.current !== null) {\r\n            phonenumnerDivRef.current.style.borderBottom = `3px solid ${themeColors?.valid}`\r\n        }\r\n        divContainingInputRefs?.current?.forEach(element => {\r\n            element.style.borderBottom = `3px solid ${themeColors?.valid}`;\r\n        })\r\n\r\n        //password and confirm-passwword states are necessary cos of synchronous rendering of directives in the form\r\n        setPhoneNumber(\"\"); setFeedback(''); setInpuValuesForSynchronousRendering((p) => { return { password: \"\", confirmPassword: \"\", gender: \"\" } });\r\n    }\r\n    return (\r\n        <>\r\n            {logics?.showloading && <Loading />}\r\n            {logics?.showSignin ? <SignIn Parentfeedback={feedback} /> :\r\n\r\n                <main className=\"signin-container\">\r\n                    <header>\r\n                        <Link to={'/'}>Home</Link>\r\n                        <Link to={'/login'}>Sign in</Link>\r\n                    </header>\r\n                    <div className=\"form-container\">\r\n                        <div className=\"content\">\r\n                            <div className=\"feedback\"><span style={{ visibility: \"hidden\", height: \"0px\", width: \"0px\", opacity: \"0\", overflow: \"hidden\" }}>.</span>{feedback}</div>\r\n\r\n\r\n                            {!logics?.showCodeForm ? <form>\r\n                                <div className=\"form-heading\"><b>Reset Password</b></div>\r\n                                <table>\r\n                                    <tbody>\r\n\r\n                                        <tr>\r\n                                            <td><label>Phone</label></td>\r\n                                            <td>\r\n                                                <div ref={phonenumnerDivRef}><PhoneInput onChange={setPhoneNumber} value={phoneNumber} defaultCountry={'GH'} placeholder={'Phone number'} /></div>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                        <tr >\r\n                                            <td style={{ textAlign: \"center\" }}><button className=\"submit\" type=\"submit\" onClick={(e) => { e.preventDefault(); submitPhoneNumber() }}>Submit</button></td>\r\n                                            <td style={{ textAlign: \"center\" }}><button className=\"submit\" type=\"reset\" onClick={(e) => { e.preventDefault(); cancel(); }}>Cancel</button></td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </form> :\r\n\r\n                                //CODE FORM*************************************************************************\r\n                                <form>\r\n                                    <div className=\"form-heading\"><b>Reset Password</b></div>\r\n                                    <table>\r\n                                        <tbody>\r\n\r\n                                            <tr>\r\n                                                <td><label>Code</label></td>\r\n                                                <td>\r\n                                                    <div ref={addToDivContainingInputRefs}><input className=\"code\" ref={addToInputRefs} placeholder={'Enter code'} type={'text'} /></div>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                                <td><label>New password</label></td>\r\n                                                <td>\r\n                                                    <div className=\"password\" ref={addToDivContainingInputRefs}>\r\n                                                        <input onChange={(e) => {\r\n                                                            setInpuValuesForSynchronousRendering(p => { return { ...p, password: e?.target?.value } }); if ((((includeNumbers(e?.target?.value)) || (includesSymbols(e?.target?.value)))) && ((includesLowerCase(e?.target?.value) && includesUpperCase(e?.target?.value)) && e?.target?.value?.length >= 8)) { setInptDirectives(p => { return { ...p, password: false } }) }\r\n                                                            else {\r\n                                                                setInptDirectives(p => { return { ...p, password: true } })\r\n                                                            }\r\n                                                            if (e.target?.value === inputValuesForSynchronusRendering?.confirmPassword) {\r\n                                                                setInptDirectives(p => { return { ...p, confirmpassword: false } })\r\n                                                            }\r\n                                                        }} type={\"password\"} autoComplete={\"current-password\"} ref={addToInputRefs} className={\"password\"} placeholder={'New password'}></input>\r\n                                                        <span>{logics?.showPassword ? <button onClick={(e) => { e.preventDefault(); hidePassword() }}><BsFillUnlockFill /></button> : <button onClick={(e) => { e.preventDefault(); viewPassword() }}><BsFillLockFill /></button>}</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                            {inputDirectives?.password && inputValuesForSynchronusRendering?.password && <tr>\r\n                                                <td></td>\r\n                                                <td className=\"input-directive\" style={{ height: \"0px\" }}>\r\n                                                    {(inputValuesForSynchronusRendering?.password?.length < 8) && <section className=\"inputDirectives\">- 8 or more characters</section>}\r\n                                                    {(!(includesSymbols(inputValuesForSynchronusRendering?.password) || (includeNumbers(inputValuesForSynchronusRendering?.password)))) && <section>- Must include symbols or numbers</section>}\r\n                                                    {(!includesLowerCase(inputValuesForSynchronusRendering?.password) || !includesUpperCase(inputValuesForSynchronusRendering?.password)) && <section>- Must contain lowercase and uppercase</section>}\r\n                                                </td>\r\n                                            </tr>}\r\n\r\n                                            <tr>\r\n                                                <td><label>Confirm password</label></td>\r\n                                                <td>\r\n                                                    <div className=\"confirmpassword\" ref={addToDivContainingInputRefs}>\r\n                                                        <input onChange={(e) => {\r\n                                                            setInpuValuesForSynchronousRendering(p => { return { ...p, confirmPassword: (e?.target?.value) } }); if (e?.target?.value !== inputValuesForSynchronusRendering?.password) { setInptDirectives(p => { return { ...p, confirmpassword: true } }) } else {\r\n                                                                setInptDirectives(p => { return { ...p, confirmpassword: false } })\r\n                                                            }\r\n                                                        }}\r\n                                                            type={\"password\"} autoComplete={\"current-password\"} ref={addToInputRefs} className={\"confirmpassword\"} placeholder={'Confirm new password'}></input>\r\n                                                        <span>{logics?.showConfirmPassword ? <button onClick={(e) => { e.preventDefault(); hideConfirmPassword() }}><BsFillUnlockFill></BsFillUnlockFill></button> : <button onClick={(e) => { e.preventDefault(); viewConfirmPassword() }}><BsFillLockFill /></button>}</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                            {inputDirectives?.confirmpassword && inputValuesForSynchronusRendering?.confirmPassword && <tr>\r\n                                                <td></td>\r\n                                                <td className=\"input-directive\">- Must match with password</td>\r\n                                            </tr>}\r\n\r\n                                            <tr >\r\n                                                <td style={{ textAlign: \"center\" }}><button className=\"submit\" type=\"submit\" onClick={(e) => { e.preventDefault(); submitNewPassWord() }}>Submit</button></td>\r\n                                                <td style={{ textAlign: \"center\" }}><button className=\"submit\" type=\"reset\" onClick={(e) => { e.preventDefault(); cancel(); navigateTo('/login') }}>Cancel</button></td>\r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </form>}\r\n                            {/* <div className=\"sign-in-with-google\">Sign up with Google</div> */}\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer>{`Designed by GoldCoast University (C) ` + new Date().getFullYear()}</footer>\r\n                </main>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword_Public;","import { Link, Navigate } from \"react-router-dom\";\r\nimport PhoneInput, { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport Loading from \"./loading\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useAuth from \"../../customHooks/useAuth\";\r\nimport {\r\n  includeNumbers,\r\n  includesLowerCase,\r\n  includesSymbols,\r\n  includesUpperCase,\r\n} from \"../../FNS/includes\";\r\nimport axios from \"axios\";\r\nimport { API_BASE_URL } from \"../../Resources/BaseURL\";\r\nimport setStatuscodeErrorMessage from \"../../FNS/setStatuscodeErrorMessage\";\r\nimport { BsFillUnlockFill, BsFillLockFill } from \"react-icons/bs\";\r\nimport { AiOutlineCopyright } from \"react-icons/ai\";\r\nimport { useLocation } from \"react-router-dom\";\r\n//import GoogleApp from \"./loginWithGoogle\";\r\n//import { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nimport \"./signin.css\";\r\n\r\nconst SignIn = ({ Parentfeedback }) => {\r\n  const { setAuth, auth } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [logics, setLogics] = useState({\r\n    showloading: false,\r\n    showPassword: false,\r\n  });\r\n\r\n  const inputRefs = useRef([]);\r\n  const addToInputRefs = (element) => {\r\n    if (element && !inputRefs.current?.includes(element)) {\r\n      inputRefs?.current?.push(element);\r\n    } else {\r\n      inputRefs?.current?.pop(element);\r\n    }\r\n  };\r\n\r\n  const hidePassword = () => {\r\n    inputRefs.current.find((element) => {\r\n      return element.className === \"password\";\r\n    }).type = \"password\";\r\n\r\n    setLogics((p) => {\r\n      return { ...p, showPassword: false };\r\n    });\r\n  };\r\n\r\n  const viewPassword = () => {\r\n    inputRefs.current.find((element) => {\r\n      return element.className === \"password\";\r\n    }).type = \"text\";\r\n\r\n    setLogics((p) => {\r\n      return { ...p, showPassword: true };\r\n    });\r\n  };\r\n\r\n  const Login = async () => {\r\n    setFeedback(\"\");\r\n    let password;\r\n    setFeedback(\"\");\r\n    inputRefs.current.forEach((element) => {\r\n      if (element.className === \"password\") {\r\n        password = element?.value;\r\n        if (password) {\r\n          if (password?.length < 8) {\r\n            setFeedback(\"Phone number or password incorrect\");\r\n          } else {\r\n            if (\r\n              !(\r\n                (includeNumbers(password) &&\r\n                  includesUpperCase(password) &&\r\n                  includesLowerCase(password)) ||\r\n                (includesSymbols(password) &&\r\n                  includesUpperCase(password) &&\r\n                  includesLowerCase(password)) ||\r\n                (includeNumbers(password) &&\r\n                  includesUpperCase(password) &&\r\n                  includesLowerCase(password) &&\r\n                  includesSymbols(password))\r\n              )\r\n            ) {\r\n              setFeedback(\"Phone number or password incorrect\");\r\n            }\r\n          }\r\n        } else {\r\n          setFeedback(\"Enter all fields\");\r\n        }\r\n      }\r\n\r\n      if (element.className === \"PhoneInputInput\") {\r\n        if (!phoneNumber) {\r\n          setFeedback(\"Enter all fields\");\r\n        } else {\r\n          if (phoneNumber && !isValidPhoneNumber(phoneNumber)) {\r\n            setFeedback(\"Phone number or password incorrect\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (\r\n      phoneNumber !== \"\" &&\r\n      phoneNumber !== undefined &&\r\n      isValidPhoneNumber(phoneNumber) &&\r\n      password !== \"\" &&\r\n      password !== undefined &&\r\n      ((includeNumbers(password) &&\r\n        includesUpperCase(password) &&\r\n        includesLowerCase(password)) ||\r\n        (includesSymbols(password) &&\r\n          includesUpperCase(password) &&\r\n          includesLowerCase(password)) ||\r\n        (includeNumbers(password) &&\r\n          includesUpperCase(password) &&\r\n          includesLowerCase(password) &&\r\n          includesSymbols(password)))\r\n    ) {\r\n      const loginInfo = { username: phoneNumber, password: password };\r\n\r\n      try {\r\n        setLogics((p) => {\r\n          return { ...p, showloading: true };\r\n        });\r\n        const response = await axios.post(\r\n          `${API_BASE_URL}/sign-in/local`,\r\n          loginInfo,\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response?.status === 200) {\r\n          axios.defaults.headers.common[\r\n            \"Authorization\"\r\n          ] = `Bearer ${response?.data?.accessToken}`;\r\n          setAuth(response?.data);\r\n          setLogics((p) => {\r\n            return { ...p, showloading: false };\r\n          });\r\n\r\n          if (location?.state) {\r\n            navigate(`${location?.state?.trim()?.toLowerCase()}`);\r\n          } else {\r\n            navigate(\r\n              `/${response?.data?.stagenameInUrl?.trim()?.toLowerCase()}`\r\n            );\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLogics((p) => {\r\n          return { ...p, showloading: false };\r\n        });\r\n        if (!error?.response?.data) {\r\n          setFeedback(\"Network error...\");\r\n        } else if (error?.response?.status === 405) {\r\n          setFeedback(\"Wrong username or password\");\r\n        } else {\r\n          setStatuscodeErrorMessage(error?.response?.status, setFeedback);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancel = () => {\r\n    inputRefs.current.forEach((element) => {\r\n      element.value = \"\";\r\n    });\r\n\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {auth?.stagenameInUrl === \"\" ||\r\n      auth?.stagenameInUrl === null ||\r\n      auth?.stagenameInUrl === undefined ? (\r\n        <main className=\"signin-container\">\r\n          <header>\r\n            <Link to={\"/\"}>Home</Link>\r\n            <Link to={\"/register\"}>Sign up</Link>\r\n          </header>\r\n          <div className=\"form-container\">\r\n            <div className=\"content\">\r\n              <div className=\"feedback\">\r\n                <span\r\n                  style={{\r\n                    visibility: \"hidden\",\r\n                    height: \"0px\",\r\n                    width: \"0px\",\r\n                    opacity: \"0\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  .\r\n                </span>\r\n                {feedback && feedback}{\" \"}\r\n                {!feedback && Parentfeedback && Parentfeedback}\r\n              </div>\r\n\r\n              <form>\r\n                <div className=\"form-heading\">\r\n                  <b>Sign in</b>\r\n                </div>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Phone</label>\r\n                      </td>\r\n                      <td>\r\n                        <div>\r\n                          <PhoneInput\r\n                            ref={addToInputRefs}\r\n                            onChange={setPhoneNumber}\r\n                            value={phoneNumber}\r\n                            defaultCountry={\"GH\"}\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                inputRefs?.current[1]?.focus();\r\n                                viewPassword();\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <label>Password</label>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"password\">\r\n                          <input\r\n                            type={\"password\"}\r\n                            autoComplete={\"current-password\"}\r\n                            ref={addToInputRefs}\r\n                            className={\"password\"}\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                inputRefs?.current[2]?.click();\r\n                                viewPassword();\r\n                              }\r\n                            }}\r\n                          ></input>\r\n                          <span>\r\n                            {logics?.showPassword ? (\r\n                              <button\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  hidePassword();\r\n                                }}\r\n                              >\r\n                                <BsFillUnlockFill />\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  viewPassword();\r\n                                }}\r\n                              >\r\n                                <BsFillLockFill />\r\n                              </button>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td style={{ textAlign: \"center\" }}>\r\n                        <button\r\n                          className=\"submit\"\r\n                          type=\"submit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            Login();\r\n                          }}\r\n                          ref={addToInputRefs}\r\n                        >\r\n                          Sign in\r\n                        </button>\r\n                      </td>\r\n                      <td style={{ textAlign: \"center\" }}>\r\n                        <button\r\n                          className=\"submit\"\r\n                          type=\"reset\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            cancel();\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n\r\n              <div className=\"sign-in-with-google\">\r\n                <Link to={\"/reset-password\"}>Forgot password? </Link>\r\n              </div>\r\n\r\n              <div className=\"not-having-account\">\r\n                Do not have an account? sign up{\" \"}\r\n                <Link to={\"/register\"}>here</Link>{\" \"}\r\n              </div>\r\n\r\n              {/* <Auth0Provider\r\n                            domain={\"dev-2xzv1o18pqg48l01.us.auth0.com\"}\r\n                            clientId={\"W1xixEygVYDTD0xbn2j4PPuzyarPFFwn\"}\r\n                            authorizationParams={{ redirect_uri: `${window?.location?.origin}/login` }}\r\n                        >\r\n                            <GoogleApp setFeedback={setFeedback} />\r\n\r\n                        </Auth0Provider> */}\r\n            </div>\r\n          </div>\r\n\r\n          <footer>\r\n            {\" \"}\r\n            <span style={{ position: \"relative\", top: \"2px\" }}>\r\n              <AiOutlineCopyright />\r\n            </span>{\" \"}\r\n            {new Date().getFullYear()} GoldCoast University\r\n          </footer>\r\n        </main>\r\n      ) : (\r\n        <Navigate\r\n          to={`/${auth?.stagenameInUrl?.trim()?.toLowerCase()}`}\r\n        ></Navigate>\r\n      )}\r\n\r\n      {logics?.showloading && <Loading />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"names":["includesUpperCase","phrase","includes","includesLowerCase","includesSymbols","includeNumbers","String","statuscode","setFeedback","_inputValuesForSynchr","navigateTo","useNavigate","_useState","useState","_useState2","_slicedToArray","phoneNumber","setPhoneNumber","_useState3","_useState4","feedback","_useState5","showPassword","showConfirmPassword","showloading","showSignin","showCodeForm","_useState6","logics","setLogics","_useState7","password","confirmPassword","_useState8","inputValuesForSynchronusRendering","setInpuValuesForSynchronousRendering","themeColors","valid","error","_useState9","confirmpassword","_useState10","inputDirectives","setInptDirectives","inputRefs","useRef","addToInputRefs","element","_inputRefs$current","_inputRefs$current3","_inputRefs$current2","current","pop","push","divContainingInputRefs","phonenumnerDivRef","addToDivContainingInputRefs","_divContainingInputRe","_divContainingInputRe3","_divContainingInputRe2","submitPhoneNumber","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data","_response$data$email","_response$data$email$","_response$data2","_response$data2$email","_response$data2$email2","_response$data3","_response$data3$email","_response$data3$email2","_response$data4","_response$data4$email","_response$data4$email2","_response$data5","_response$data5$email","_error$response","_error$response2","_error$response3","_error$response4","wrap","_context","prev","next","style","borderBottom","concat","isValidPhoneNumber","p","_objectSpread","axios","API_BASE_URL","username","sent","status","data","email","split","slice","length","t0","setStatuscodeErrorMessage","stop","apply","arguments","submitNewPassWord","_ref2","_callee2","_inputRefs$current4","_code","code","_divContainingInputRe4","_error$response5","_error$response6","_error$response7","_context2","forEach","_password","className","console","log","value","undefined","cancel","_inputRefs$current5","_divContainingInputRe5","fullname","gender","_jsxs","_Fragment","children","_jsx","Loading","SignIn","Parentfeedback","Link","to","visibility","height","width","opacity","overflow","ref","placeholder","type","onChange","e","_e$target2","_e$target3","_e$target4","_e$target5","_e$target6","_e$target6$value","_e$target7","_e$target","target","autoComplete","onClick","preventDefault","find","BsFillUnlockFill","BsFillLockFill","_e$target9","_e$target8","textAlign","PhoneInput","defaultCountry","Date","getFullYear","_auth$stagenameInUrl","_auth$stagenameInUrl$","_useAuth","useAuth","setAuth","auth","navigate","location","useLocation","viewPassword","Login","loginInfo","_location$state","_location$state$trim","_response$data2$stage","_response$data2$stage2","withCredentials","headers","common","accessToken","state","trim","toLowerCase","stagenameInUrl","onKeyDown","_inputRefs$current$","key","focus","_inputRefs$current$2","click","position","top","AiOutlineCopyright","Navigate"],"sourceRoot":""}